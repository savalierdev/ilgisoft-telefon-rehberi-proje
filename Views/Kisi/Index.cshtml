@model IEnumerable<TelefonRehberi.Models.Kisi>

@{
    ViewData["Title"] = "Kişi Listesi";
}



<div class="container">
    <h1 class="mt-4 poppins-regular">Telefon Rehberi Projesi</h1>
    <div class="mb-3 poppins-light">
        <p>Telefon Rehberi Projesi'ne hoş geldiniz. Bu uygulama ile kişilerinizi kolayca yönetebilirsiniz.</p>
    </div>    <div class="mb-3 poppins-light">
        <h4 class="mt-3 mb-2">Kullanılan Teknolojiler</h4>
        <ul class="list-group">
            <li class="list-group-item"><strong>Backend:</strong> ASP.NET Core MVC 9.0</li>
            <li class="list-group-item"><strong>Veritabanı:</strong> MySQL (Pomelo.EntityFrameworkCore.MySql)</li>
            <li class="list-group-item"><strong>ORM:</strong> Entity Framework Core - Code First yaklaşımı</li>
            <li class="list-group-item"><strong>Frontend:</strong> Bootstrap 5, jQuery, DataTables</li>
            <li class="list-group-item"><strong>UI Özellikleri:</strong> Responsive tasarım, modal diyaloglar, Poppins font ailesi</li>
            <li class="list-group-item"><strong>Veri Doğrulama:</strong> Server-side validation, client-side validation (jQuery Validation)</li>
        </ul>
    </div>
    
    <div class="mb-3 poppins-light">
        <h4 class="mt-4 mb-2">Projeyi Nasıl Çalıştırırız?</h4>
        <div class="card">
            <div class="card-header">
                Kurulum ve Çalıştırma Adımları
            </div>
            <div class="card-body">
                <ol class="list-group list-group-numbered">
                    <li class="list-group-item">
                        <strong>1. Gereksinimlerin Kurulumu:</strong>
                        <ul>
                            <li>.NET 9.0 SDK veya üzeri</li>
                            <li>MySQL Veritabanı</li>
                            <li>Visual Studio 2025 / Visual Studio Code</li>
                        </ul>
                    </li>
                    <li class="list-group-item">
                        <strong>2. Veritabanı Bağlantısı:</strong>
                        <p>appsettings.json dosyasında bulunan bağlantı cümlesini (connection string) kendi MySQL sunucu bilgilerinize göre güncelleyin:</p>
                        <pre class="bg-light p-2"><code>"ConnectionStrings": {
    "DefaultConnection": "Server=localhost;Database=TelefonRehberi;Uid=root;Pwd=yourpassword;"
}</code></pre>
                    </li>
                    <li class="list-group-item">
                        <strong>3. Migration İşlemleri:</strong>
                        <p>Terminal veya Package Manager Console'dan aşağıdaki komutları çalıştırın:</p>
                        <pre class="bg-light p-2"><code>dotnet ef database update</code></pre>
                        <p>Veya Visual Studio'da:</p>
                        <pre class="bg-light p-2"><code>Update-Database</code></pre>
                    </li>
                    <li class="list-group-item">
                        <strong>4. Projeyi Çalıştırma:</strong>
                        <p>Terminal'den:</p>
                        <pre class="bg-light p-2"><code>dotnet run</code></pre>
                        <p>Veya Visual Studio / VS Code üzerinden "Start" düğmesine basarak.</p>
                    </li>
                    <li class="list-group-item">
                        <strong>5. Uygulamaya Erişim:</strong>
                        <p>Tarayıcınızdan şu adresi açın:</p>
                        <pre class="bg-light p-2"><code>https://localhost:5001</code></pre>
                        <p>veya</p>
                        <pre class="bg-light p-2"><code>http://localhost:5000</code></pre>                    </li>                </ol>
            </div>
        </div>
    </div>
    
    <div class="mb-3 poppins-light">
        <h4 class="mt-4 mb-2">Veritabanı Yapısı</h4>
        <div class="card">
            <div class="card-header">
                Veritabanı Tablosu ve İlişkileri
            </div>
            <div class="card-body">
                <h5 class="poppins-medium">Kisiler Tablosu</h5>
                <table class="table table-bordered table-striped">
                    <thead class="table-dark">
                        <tr>
                            <th>Alan</th>
                            <th>Tip</th>
                            <th>Açıklama</th>
                        </tr>
                    </thead>
                    <tbody class="poppins-light">
                        <tr>
                            <td><strong>KisiId</strong></td>
                            <td>int</td>
                            <td>Birincil anahtar, otomatik artan</td>
                        </tr>
                        <tr>
                            <td><strong>Ad</strong></td>
                            <td>string</td>
                            <td>Kişinin adı (zorunlu alan)</td>
                        </tr>
                        <tr>
                            <td><strong>Soyad</strong></td>
                            <td>string</td>
                            <td>Kişinin soyadı (zorunlu alan)</td>
                        </tr>
                        <tr>
                            <td><strong>TelefonNumarasi</strong></td>
                            <td>string</td>
                            <td>10 haneli telefon numarası (zorunlu alan)</td>
                        </tr>
                    </tbody>
                </table>
                
                <h5 class="mt-4 poppins-medium">Kısıtlamalar ve İndeksler</h5>
                <ul class="list-group mb-3">
                    <li class="list-group-item"><strong>IX_Kisiler_TelefonNumarasi:</strong> Telefon numaralarının benzersiz olmasını sağlayan indeks</li>
                    <li class="list-group-item"><strong>IX_Kisiler_Ad_Soyad:</strong> Ad ve soyadı kombinasyonunun benzersiz olmasını sağlayan indeks</li>
                </ul>
                
                <h5 class="mt-4 poppins-medium">ER Diyagramı</h5>
                <pre class="bg-light p-3 poppins-light">
+----------------+
|     Kisiler    |
+----------------+
| KisiId (PK)    |
| Ad             |
| Soyad          |
| TelefonNumarasi|
+----------------+
                </pre>
            </div>
        </div>
    </div>
    
    <div class="mb-5 poppins-light">
        <h4 class="mt-4 mb-2">Projeyi Yayına Alma (Deployment)</h4>
        <div class="card">
            <div class="card-header">
                Canlı Ortama Yayınlama Adımları
            </div>
            <div class="card-body">
                <ol class="list-group list-group-numbered">
                    <li class="list-group-item">
                        <strong>1. Projeyi Yayın İçin Hazırlama:</strong>
                        <p>PowerShell terminal'den projeyi "publish" edin:</p>
                        <pre class="bg-light p-2"><code>dotnet publish -c Release -o ./publish</code></pre>
                        <p>Bu komut, ./publish klasörüne production-ready dosyaları oluşturacaktır.</p>
                    </li>
                    <li class="list-group-item">
                        <strong>2. Veritabanı Hazırlığı:</strong>
                        <ul>
                            <li>Production ortamında MySQL veritabanı oluşturun</li>
                            <li>Güvenli bir kullanıcı hesabı ve şifre tanımlayın</li>
                            <li>Production için appsettings.json dosyasındaki bağlantı cümlesini güncelleyin</li>
                        </ul>
                    </li>
                    <li class="list-group-item">
                        <strong>3. Deployment Seçenekleri:</strong>
                        <div class="accordion" id="deploymentOptionsAccordion">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingIIS">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseIIS" aria-expanded="false" aria-controls="collapseIIS">
                                        IIS (Windows Server)
                                    </button>
                                </h2>
                                <div id="collapseIIS" class="accordion-collapse collapse" aria-labelledby="headingIIS" data-bs-parent="#deploymentOptionsAccordion">
                                    <div class="accordion-body">
                                        <ol>
                                            <li>Windows Server'da .NET 9.0 Hosting Bundle'ı kurun</li>
                                            <li>IIS'te yeni bir uygulama havuzu (application pool) oluşturun</li>
                                            <li>Yeni bir website oluşturun ve fiziksel yolunu publish klasörüne yönlendirin</li>
                                            <li>web.config dosyasını kontrol edin ve gerekirse ayarlayın</li>
                                        </ol>
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingLinux">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseLinux" aria-expanded="false" aria-controls="collapseLinux">
                                        Linux (Nginx/Apache)
                                    </button>
                                </h2>
                                <div id="collapseLinux" class="accordion-collapse collapse" aria-labelledby="headingLinux" data-bs-parent="#deploymentOptionsAccordion">
                                    <div class="accordion-body">
                                        <ol>
                                            <li>Linux sunucuya .NET 9.0 Runtime yükleyin</li>
                                            <li>Nginx veya Apache'yi reverse proxy olarak yapılandırın</li>
                                            <li>Systemd service dosyası oluşturun (örn: telefon-rehberi.service)</li>
                                            <li>SSL sertifikası yapılandırın (Let's Encrypt)</li>
                                        </ol>
                                        <p>Örnek Nginx yapılandırması:</p>
                                        <pre class="bg-light p-2"><code>server {
    listen 80;
    server_name telefonrehberi.example.com;
    
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}</code></pre>
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingDocker">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseDocker" aria-expanded="false" aria-controls="collapseDocker">
                                        Docker Konteyneri
                                    </button>
                                </h2>
                                <div id="collapseDocker" class="accordion-collapse collapse" aria-labelledby="headingDocker" data-bs-parent="#deploymentOptionsAccordion">
                                    <div class="accordion-body">
                                        <p>Proje kök dizininde Dockerfile oluşturun:</p>
                                        <pre class="bg-light p-2"><code>FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src
COPY ["TelefonRehberi.csproj", "."]
RUN dotnet restore "TelefonRehberi.csproj"
COPY . .
RUN dotnet build "TelefonRehberi.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "TelefonRehberi.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TelefonRehberi.dll"]</code></pre>
                                        <p>Docker image oluşturma ve çalıştırma:</p>
                                        <pre class="bg-light p-2"><code>docker build -t telefon-rehberi:latest .
docker run -d -p 8080:80 --name telefon-rehberi-container telefon-rehberi:latest</code></pre>
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingCloud">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseCloud" aria-expanded="false" aria-controls="collapseCloud">
                                        Cloud Servisleri (Azure, AWS, GCP)
                                    </button>
                                </h2>
                                <div id="collapseCloud" class="accordion-collapse collapse" aria-labelledby="headingCloud" data-bs-parent="#deploymentOptionsAccordion">
                                    <div class="accordion-body">
                                        <h5>Azure App Service</h5>
                                        <pre class="bg-light p-2"><code>az webapp up --name TelefonRehberiApp --resource-group MyResourceGroup --sku F1 --location "West Europe"</code></pre>
                                        <h5>AWS Elastic Beanstalk</h5>
                                        <p>AWS EB CLI kullanarak:</p>
                                        <pre class="bg-light p-2"><code>eb init TelefonRehberi --region eu-west-1 --platform dotnet
eb create telefon-rehberi-env</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <strong>4. Production Ortamı Güvenliği:</strong>
                        <ul>
                            <li>HTTPS/SSL sertifikası yapılandırın</li>
                            <li>Hassas bilgileri User Secrets veya çevre değişkenlerinde saklayın</li>
                            <li>Güvenlik başlıklarını (HSTS, CSP vb.) yapılandırın</li>
                            <li>Firewall kurallarını ayarlayın (80/443 portları dışındakileri kapatın)</li>
                        </ul>
                    </li>
                    <li class="list-group-item">
                        <strong>5. Uygulamayı İzleme ve Bakım:</strong>
                        <ul>
                            <li>Application Insights veya Prometheus+Grafana gibi izleme araçları yapılandırın</li>
                            <li>Log yönetimi için yapılandırma yapın (Serilog/NLog)</li>
                            <li>Otomatik yedekleme stratejisi belirleyin</li>
                            <li>Periyodik güvenlik güncelleştirmelerini planlayın</li>
                        </ul>
                    </li>
                </ol>
                <div class="alert alert-info mt-3">
                    <i class="bi bi-info-circle"></i> 
                    <strong>Not:</strong> Production ortamına geçmeden önce mutlaka tüm işlevleri test edin ve veritabanı yedekleme stratejinizi oluşturun!
                </div>
            </div>
        </div>
    </div>



<div class="container">
    <h1 class="mt-4 poppins-regular">Kişi Listesi</h1>
    <div class="mb-3 poppins-light">
        <a href="@Url.Action("Create", "Kisi")" class="btn btn-dark modal-link">Yeni Kişi Ekle</a>
    </div>
<div class="container">
    <table id="kisilerTable" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>Ad</th>
                <th>Soyad</th>
                <th>Telefon Numarası</th>
                <th>İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var kisi in Model)
            {
                <tr>
                    <td>@kisi.Ad</td>
                    <td>@kisi.Soyad</td>
                    <td>@kisi.TelefonNumarasi</td>
                    <td>
                        <a href="@Url.Action("Details", "Kisi", new { id = kisi.KisiId })" class="btn btn-dark modal-link poppins-regular">Detaylar</a>
                        <a href="@Url.Action("Edit", "Kisi", new { id = kisi.KisiId })" class="btn btn-dark modal-link poppins-regular">Düzenle</a>
                        <a href="@Url.Action("Delete", "Kisi", new { id = kisi.KisiId })" class="btn btn-dark modal-link poppins-regular">Sil</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

<!-- Modal -->
<div class="modal fade" id="formModal" tabindex="-1" aria-labelledby="formModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="modalContent">
            <!-- Modal content will be loaded here -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#kisilerTable').DataTable({
                "language": {
                    "info": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "infoEmpty": "Kayıt yok",
                    "infoFiltered": "(_MAX_ kayıt içerisinden filtrelendi)"
                },
                "responsive": true,
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Tümü"]],
                "order": [[0, 'asc']],
                "columnDefs": [
                    { "orderable": false, "targets": 3 } // İşlemler sütunu için sıralama devre dışı
                ]
            });
            
            // Modal link tıklama olayları
            $(document).on('click', '.modal-link', function (e) {
                e.preventDefault();
                var url = $(this).attr('href');
                
                // Modal içeriğini yükle
                $('#modalContent').html('<div class="text-center my-5"><div class="spinner-border" role="status"><span class="visually-hidden">Yükleniyor...</span></div></div>');
                
                // Modal'ı göster
                $('#formModal').modal('show');
                
                // AJAX ile içeriği yükle
                $.ajax({
                    url: url,
                    type: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (data) {
                        $('#modalContent').html(data);
                    },
                    error: function () {
                        $('#modalContent').html('<div class="modal-header"><h5 class="modal-title">Hata</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div><div class="modal-body"><p>İçerik yüklenirken bir hata oluştu.</p></div>');
                    }
                });
            });
        });
    </script>
}
